plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'flyproject'
version = '1.0.3'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://jitpack.io'
    }
}
shadowJar{
    manifest {
        attributes(
                "Main-Class" : "flyproject.flymusic.Test"
        )
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'
    compileOnly 'org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT'
    implementation fileTree(dir: 'libs',includes: ['OrangeAPI-1.0.3.jar'])
    compileOnly 'com.github.mcdoeswhat:AmazingBot-3.0:3.2.31'
    //implementation fileTree(dir: 'libs',includes: ['MiraiMC-Bukkit.jar'])
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
